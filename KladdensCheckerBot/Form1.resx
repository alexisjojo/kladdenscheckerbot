<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgIAAtbW0AIyMiwCKiokAh4eGAIODggAAAP8Afn59AHh3dgBycXAAa2ppAGNjYQBeXVwAV1ZVAE9P
        TQBKSUgAHx0bAB4dGwAeHBoA////AB0cGgAdGxkAHBsZABwaGAAbGhgAGxkYABoZFwAVFBMA8PDwAAD/
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHR0dHRwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHB0dHR0d
        HR0dHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHR0d
        HR0dHR0dHR0dHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HR0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHR0dHR0dHR0dHR0dHR0dHR0dHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHR0dHR0dHR0dHR0dHR0dHR0dHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHR0dHR0dHR0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHB0dHR0dHR0dHR0dHR0dHR0dHR0dHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHB0dHR0dHR4eHh4eHh4eHh4eHh0dHR0dHRwcHBwcHBwcHBwcHBwcHh4eHh4e
        HhwcHBweHh4eHBwcHB4eHBwcHBwdHR0dHR4eHh4TExMTExMTHh4eHR0dHR0cHBwcHBwcHBwcHBwcHB4e
        HBwcHB4eHBweHhwcHh4cHB4eHBwcHBwcHR0dHR4eHh4TExMTExMTExMeHh4dHR0dHBwcHBwcHBwcHBwc
        HBweHhwcHBweHhwcHh4cHB4eHBweHhwcHBwcHR0dHR0dHR4eHh4eHh4eHh4eHh0dHR0dHR0cHBwcHBwc
        HBwcHBwcHh4cHBwcHh4cHB4eHBweHhwcHh4cHBwcHB0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHBwc
        HBwcHBwcHBwcHB4eHBwcHB4eHBweHhwcHh4cHB4eHBwcHBwdHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0d
        HRwcHBwcHBwcHBwcHBweHh4eHh4eHBwcHh4cHB4eHBweHhwcHBwcHR0dHR0dHR0dHR0dHR0dHR0eHh0d
        HR0dHR0cHBwcHBwcHBwcHBwcHh4cHBwcHh4cHBweHh4eHBweHh4eHBwcHB0dHR0dHR0dHR0dHR0dHR0e
        Hh4eHR0dHR0dHBwcHBwcHBwcHBwcHB4eHBwcHB4eHBwcHBwcHBwcHB4eHBwcHBwdHR0dHR0dHh4dHR0d
        HR0eEx4eHh4dHR0dHRwcHBwcHBwcHBwcHBweHhwcHBweHhwcHBwcHBwcHBweHhwcHBwcHB0dHR0dHh4e
        Hh0dHR0dHhMeHh4eHR0dHRwcHBwcHBwcHBwcHBwcHh4eHh4eHhwcHBwcHBwcHBwcHBwcHBwcHBwdHR0d
        Hh4eEx4eHR0dHR4eHh4eHh0dHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HR0dHR4eHhMeHh0dHR0dHh4eHh0dHR0dHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwdHR0dHh4eHh0dHR0dHR0eHh0dHR0dHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHR0dHR0eHh0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwdHR0dHR0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHB0dHR0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHR0dHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwdHR0dHR0dHR0dHR0dHRwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwdHR0dHR0dHR0dHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHR0dHRwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb
        GxsbGxsbGxsbGxsbGxsaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoa
        GhoaGhoaGhoaGhoaGhoaGhoaGRkZGRkZGRkZGRMTExMZGRkTExkZExMZGRkTExMTGRkZGRMTExMZGRMT
        GRkTExkZExMTExkZGRMTGRkZGRkZGRgYGBgYGBgYGBMTGBgTExgYExMYGBMTGBgTExgYExMYGBMTGBgT
        ExgTExgTExgYExMYGBMTGBgTExgYGBgYGBgYGBgYGBgYGBMTGBgYGBMYGBMTGBgTExgYExMYGBgYGBgT
        ExgYGBgYExMTExgYGBMTGBgYGBgYExMYGBgYGBgYFxcXFxcXFxcTExcXFxcXFxcTExcXExMXFxMTFxcX
        FxcXExMXFxcXFxMTExcXFxcTExcXFxcXFxMTFxcXFxcXFxYWFhYWFhYWExMWFhYWFhYWExMWFhMTFhYT
        ExMTExMWFhMTFhYWFhYTExMTFhYWExMTExMTFhYTExYWFhYWFhYWFhYWFhYWFhMTFhYWFhYWFhMTFhYT
        ExYWExMWFhMTFhYTExYWExMWExMWExMWFhMTFhYTExYWExMTFhYWFhYWFRUVFRUVFRUTExUVFRUVFRUT
        ExMTExUVFRUTExMTFRUVFRMTExMVFRMTFRUTExUVExMTExUVFRMTExMVFRUVFRQUFBQUFBQUExMUFBQU
        ExQUExMUFBQUFBQUFBQUFBQUFBQUFBQUFBQTExQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQT
        ExQUExMUFBMTFBQUFBQUFBQUFBQUFBQUFBQUFBQUExMUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEhISEhIS
        EhISEhMTExMSEhITExISEhISEhISEhISEhISEhISEhISEhMTEhISEhISEhISEhISEhISEhISEhISEhER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        EREREREREBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEA8GBg8PDw8GBg8GBg8PDwYGBgYGDw8PBgYGBgYPDw8GBgYGBg8PDwYGBgYPDw8GBg8P
        BgYPDw8PDw8PBgYGBg8OBgYODg4GBg4OBgYODgYGDg4GBg4OBgYODgYGDg4GBg4OBgYODgYGDg4GBg4O
        BgYODgYGDg4ODg4OBgYODgYGDQYGDQ0GBg0NDQYGDQ0GBg0NBgYNDQYGDQ0GBg0NBgYNDQYGDQ0GBg0N
        DQ0NDQYGDQ0GBg0NDQ0NDQ0NDQ0GBgwGBgwGBgwMDAwGBgwMDAYGDAYGDAwGBgwMBgYMDAYGDAwGBgwM
        BgYMDAwMDAwGBgwMBgYMDAwMDAwMBgYGBgwLBgYGBgsLCwsLBgYLCwsLBgYGBgsLBgYLCwYGCwsGBgsL
        BgYLCwYGBgYGBgsLBgYLCwYGCwsLCwsLBgYLCwsLCgYGBgoKCgoKCgYGCgoGBgoKBgYKCgYGCgoGBgoK
        BgYKCgYGCgoGBgoKBgYKCgYGCgoGBgoKCgoKCgYGCgoGBgkGBgYGCQkJCQkGBgkJCQYGBgYJCQkJBgYG
        BgYJCQkGBgYGBgkJCQYGBgYJCQkGBgYGBgkJCQYGCQkJBgYGBgkIBgYIBgYICAgIBgYICAgICAgICAgI
        CAgICAYGCAgICAgIBgYICAgICAgICAgICAgICAgICAgGBggICAgICAgIBwYGBwcGBgcHBwYGBwcHBwcH
        BwcHBwcHBwcGBgcHBwcHBwYGBwcHBwcHBwcHBwcHBwcHBwcHBgYHBwcHBwcHBwUGBgUFBQYGBQUGBgUF
        BQUFBQUFBQUFBQUFBgYFBQUFBQUGBgUFBQUFBQUFBQUFBQUFBQUFBQYGBQUFBQUFBQUEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgIBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>